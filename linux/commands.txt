
Linux File Directory structure
https://dev-random.net/linux-directory-structure-explained/

Linux permissions
https://chmod-calculator.com/

update package list
sudo yum check-update 

upgrade installed pagckages
sudo yum update

install package
sudo yum install <package_name>

remove a package
sudo yum remove <package_name>

find a package
sudo yum find <package_name>

clean yum cache
sudo yum clean all
------------------------
cp <file_name> <file_name.bak>
systemctl restart sshd
-----------------------------------------------------------------------------------------
/etc/.bashrc 

  [ "$PS1" = "\\s-\\v\\\$ " ] && PS1="[\u@\h \W]\\$ "
-----------------------------------------------------------------------------------------
firewall
https://www.cyberciti.biz/faq/linux-web-server-firewall-tutorial/
iptables - firewall manager 
firewalld - makes easier to manage iptables 

important ports
- ssh - 22
- http - 80
- https - 443

sudo yum install firewalld or sudo dnf install firewalld 
sudo systemctl start firewalld
sudo systemctl enable firewalld

Configure firewalld
sudo firewalld-cmd --permanent --add-service=ssh
sudo firewalld-cmd --permanent --add-service=http
sudo firewalld-cmd --permanent --add-service=https
sudo firewalld-cmd --permanent --list-all - to view firewall rules
sudo firewalld-cmd --reload -  to enable firewall changes
-----------------------------------------------------------------------------------------
Fail2ban
Intrusion prevention software

sudo yum install epel-release
sudo yum install fail2ban
sudo systemctl start fail2ban
sudo systemctl enable fail2ban
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local

find and enable in jail.local
[sshd]
enable true
sudo systemctl restart fail2ban
/var/log/fail2ban.log

-----------------------------------------------------------------------------------------
NGINX
sudo yum install nginx

sudo systemctl start nginx
sudo systemctl enable nginx
sudo systemctl reload nginx - reload and enable nginx changes
test nginx -t - test nginx configuration  

nginx.conf - main configuration file
sudo nginx - t -  to test if configuration is good
sudo systemctl reload nginx - reload to enable nginx changes 
/usr/share/nginx/html 

https://serverguy.com/comparison/apache-vs-nginx/

ubuntu server
ubuntu uses apt insted of yum
apt-get update
apt-get install nginx
ps aux | grep nginx - see nginx is installed
ifconfig - paste ip address to browser to see nginx
ls -l /etc/nginx

centos server 
yum install nginx
yum install epel-release - run if nginx is not found and rerun yum install nginx 
ls -l /etc/nginx
service nginx start
ps aux | grep nginx - see nginx is installed

Installing NGINX from source
https://nginx.org/ - Documentation
https://www.nginx.com/ 
https://nginx.org/en/download.html

wget https://nginx.org/download/nginx-1.23.3.tar.gz
tar -zxvf nginx-1.23.3.tar.gz
go inside the nginx-1.23.3
./configure 
apt-get install build-essential
If there's more error, install the dependencies
apt-get install libprce3 libprce3-dev zlib1g zlib1g-dev libssl-dev
./configure  --help - https://nginx.org/en/docs/ https://nginx.org/en/docs/configure.html

./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module
make - use to compile nginx
make install  - use to install nginx
ls -l /etc/nginx
nginx -V
nginx - to check if there's error
ps aux | grep nginx - to check if nginx is running
nginx -h 
nginx -s stop - to stop nginx 
systemd installation: https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/
touch /lib/systemd/system/nginx.service - https://www.nginx.com/resources/wiki/start/topics/examples/systemd/ 
    [Unit]
    Description=The NGINX HTTP and reverse proxy server
    After=syslog.target network-online.target remote-fs.target nss-lookup.target
    Wants=network-online.target

    [Service]
    Type=forking
    PIDFile=/var/run/nginx.pid
    ExecStartPre=/usr/bin/nginx -t
    ExecStart=/usr/bin/nginx
    ExecReload=/usr/bin/nginx -s reload
    ExecStop=/bin/kill -s QUIT $MAINPID
    PrivateTmp=true

    [Install]
    WantedBy=multi-user.target

systemctl start nginx - to start nginx using stestemd
systemctl status nginx
systemctl stop nginx
stystemctl enable nginx - to enable on reboot
reboot - to reboot ubuntu

https://www.nginx.com/resources/wiki/start/topics/examples/full/
Context and Directives
Context is like a scope that contains Directives which is a key and value pairs

Creating Virtual Host
/etc/nginx/nginx.conf
    http {
      include    <path>/mime.types; //https://www.nginx.com/resources/wiki/start/topics/examples/full/#mime-types
      server { # php/fastcgi
        listen       80;
        server_name  domain1.com www.domain1.com;
        access_log   logs/domain1.access.log  main;
        root         /sties/demo;
        location ~ \.php$ {
          fastcgi_pass   127.0.0.1:1025;
        }

        # # Exact match
        # location = /greet {
        #   return 200 'Hello from NGINX "/greet" location - EXACT MATCH.';
        # }

        # Preferential Prefix match
        location ^~ /Greet2 {
          return 200 'Hello from NGINX "/greet" location.';
        }

        # # REGEX match - case sensitive
        # location ~ /greet[0-9] {
        #   return 200 'Hello from NGINX "/greet" location - REGEX MATCH.';
        # }

        # REGEX match - case insensitive
        location ~* /greet[0-9] {
          return 200 'Hello from NGINX "/greet" location - REGEX MATCH INSENSITIVE.';
        }

        #  Prefix match
        location  /Greet2 {
          return 200 'Hello from NGINX "/greet" location.';
        }
  
        https://nginx.org/en/docs/varindex.html
      }
    }
 # nginx -t - to check configuration
 # systemctl reload nginx
 #  curl -I http://<ipaddress>/styles.css

bundled (comes with nginx) and third party modules

yum install pcre pcre-devel zlib zlib-devel openssl openssl-devel
-----------------------------------------------------------------------------------------
MariaDB
sudo yum install mariadb-server mariadb
sudo systemctl start mariadb
sudo systemctl enable mariadb
sudo mysql_secure_installation

sudo cp /etc/my.cnf /etc/my.cnf.bak
sudo cp /user/share/mysql/my-medium.cnf /etc/my.cnf

sudo mysql -u root
sudo mysql -u root -p
sudo mysql -u root -p<yourpassword>

UPDATE mysql.user SET Password=PASSWORD('<yourpassword>') WHERE User='root';
flush privileges;
-----------------------------------------------------------------------------------------
PHP
sudo yum install https://rpms.remirepo.net/enterprise/remi-release-7.rpm
sudo yum install yum-utils
sudo yum-config-manager --enable remi-php72
sudo yum update 

sudo yum install php-<package_name>
sudo yum install php-fpm
sudo yum install php-gd
sudo yum install php-json
sudo yum install php-mbstring
sudo yum install php-mysqlnd
sudo yum install php-xml
sudo yum install php-xmlrpc
sudo yum install php-opcache
sudo yun install php-cli 

sudo systemctl start php-fpm
sudo systemctl enable php-fpm
sudo systemctl restart php-fpm


sudo cp /etc/php.ini /etc/php.ini.bak
sudo nano /etc/php.ini 
/etc/php.ini 
    cgi.fix_pathinfo = 0
    allow_url_fopen = Off

sudo systemctl restart php-fpm

/etc/php-fpm.d/www.conf
sudo cp /etc/php-fpm.d/www.conf /etc/php-fpm.d/www.conf.bak
sudo nano /etc/php-fpm.d/www.conf

user nginx
group nginx
listen.owner nginx
listed.group nginx
listen.mode uncomment
;listen = 127.0.0.1:9000
Add: listen=/var/run/php-fpm/php-fpm.sock
-----------------------------------------------------------------------------------------
Shutting Down

Legacy command
systemctl poweroff
systemctl shutdown
systemctl reboot
systemctl halt 

Latest version
shutdown -h now
shutdown -h +10 - this is in minutes
shutdown -h +6 "<your custom message>"
shutdown -h 22:15
shutdown -c  - stands for cancel 
shutdown -r - reboot
shutdown -H - halts shutdown without poweroff

halt - stopping all services and processes, unmounting filesystems, it does not poweroff machine. When done, you can press and hold the power button to shutdown.
reboot - clean shutdown and reboot
poweroff - clean shutdown and poweroff the machine

halt and poweroff can reboot using the --reboot
halt --reboot
poweroff --reboot

-----------------------------------------------------------------------------------------
Sleep mode

systemctl suspend  - save what's currently on your ram when computer goes to Sleep
systemctl suspend  - save what's currently on your ram into the disk when computer poweroff
systemctl hybrid-sleep
systemctl suspend-then-hibernate

-----------------------------------------------------------------------------------------

sudo nano /etc/crontab
or 
sudo crontab -e 
# m h dom mon dow user      command
*   *  *   *   *  someuser  echo 'foo'

Field    Description    Allowed Value
MIN      Minute field    0 to 59
HOUR     Hour field      0 to 23
DOM      Day of Month    1-31
MON      Month field     1-12
DOW      Day Of Week     0-7
USER 
CMD      Command         Any command to be executed.

10   22  *   *   *  root  sbin/shutdown -h +10
10   22  *   *   7,0  root  sbin/shutdown -h now
10   22  *   *   6,7  root  sbin/shutdown -h now


@yearly    <your command>
@annualy   <your command>
@monthly   <your command>
@weekly    <your command>
@daily     <your command>
@hourly    <your command>
@reboot    <your command>

-----------------------------------------------------------------------------------------

sudo useradd -m username
sudo groupadd superusers
usermod -a -G superusers username
su - username

Installing Drush 10 https://www.linode.com/docs/guides/how-to-install-drush-on-debian-10/

apt update
apt install sudo

/usr/local/etc/php/7.4

https://stackoverflow.com/questions/45049601/php-the-requested-php-extension-bcmath-is-missing-from-your-system
docker-php-ext-install bcmath

sudo apt install wget
wget https://dev.mysql.com/get/mysql-apt-config_0.8.17-1_all.deb

export PATH=$PATH:/Applications/MySQLWorkbench.app/Contents/MacOS
open ~/.bashrc  
open ~/.bash_profile

grep ".*\.zip$"
grep ".*\.conf$"

brew install mysql
export PATH="$HOME/.composer/vendor/bin:$PATH"
curl -OL https://github.com/drush-ops/drush-launcher/releases/tag/0.9.0/drush.phar
chmod +x drush.phar

../vendor/bin/drush --version
../vendor/bin/drush sql-drop 
../vendor/bin/drush sql-cli < <filelocation>
drush eval "var_dump(Drupal\Component\Utility\Crypt::randomBytesBase64(55))" - creating hashsalt
composer show -a drupal/tweet_feed 

https://www.php.net/manual/en/features.commandline.webserver.php
php -S localhost:8000 .ht.router.php
php -S localhost:8080 .ht.router.php
.ht.router.php

source ~/.bashrc

https://getgrav.org/blog/macos-bigsur-apache-multiple-php-versions
brew unlink php && brew link --overwrite --force php@5.6

