user www-data;

worker_processes auto;

events {
  worker_connections 1024;
}

http {

  include mime.types;

  # Configure microcache (fastcgi) level - how cache entry is named, keys_zone descriptive name of cache, 100m is the size of cache, inactive is how long the cache entry is kept http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path
  fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;
  #the cache format
  fastcgi_cache_key "$scheme$request_method$host$request_uri"; //https:GETdomain.com /article/1 //http:GETdomain.com /article/1 and will be hashed 
  #curl -I <url> //tells you that you are serving from the cache HIT or MISS
  add_header X-Cache $upstream_cache_status;

  server {

    listen 80;
    server_name 167.99.93.26;

    root /sites/demo;

    index index.php index.html;

    # Cache by default
    set $no_cache 0;

    # Check for cache bypass 1 is true 0 is false 
    #arg_skipcache $curl I <url>?skipcache=1
    #Another Example if ($request_method = POST)  
    if ($arg_skipcache = 1) {
      set $no_cache 1;
    }

    location / {
      try_files $uri $uri/ =404;
    }

    location ~\.php$ {
      # Pass php requests to the php-fpm service (fastcgi)
      include fastcgi.conf;
      fastcgi_pass unix:/run/php/php7.1-fpm.sock;

      # Enable cache
      fastcgi_cache ZONE_1;
      # how long cache is valid fastcgi_cache_valid 404 10m;
      fastcgi_cache_valid 200 60m;
      #tells nginx to bypass cache or not
      fastcgi_cache_bypass $no_cache;
      fastcgi_no_cache $no_cache;
    }

  }
}
